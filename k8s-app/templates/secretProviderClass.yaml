{{- if .Values.externalSecret.enabled }}
apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ include "k8s-app.fullname" . }}-spc
spec:
  provider: {{ .Values.externalSecret.provider }}
{{- if eq .Values.externalSecret.provider "azure" }}
  {{- with $.Values.externalSecret.secretObjects }}
  secretObjects:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $.Values.externalSecret.azure }}
  parameters:
    usePodIdentity: {{ .usePodIdentity }}
    useVMManagedIdentity: {{ .useVMManagedIdentity }}
    userAssignedIdentityID: {{ .userAssignedIdentityID }}
    keyvaultName: {{ .keyvaultName }}
    cloudName: {{ .cloudName }}
    resourceGroup: {{ .resourceGroup }}
    subscriptionId: {{ .subscriptionId }}
    tenantId: {{ .tenantId }}
    objects: |
      array:
      {{- range $object := .objectsArray }}
        - |
          {{- toYaml . | nindent 10 }}
      {{- end }}
  {{- end }}
{{- end }}
{{- if eq .Values.externalSecret.provider "vault" }}
{{- $secretPath := .Values.externalSecret.path }}
  secretObjects:
    - secretName: {{ .Values.externalSecret.name }}
      type: Opaque
      data:
      {{- range .Values.vaultSecret.objects }}
      - objectName: {{ . }}
        key: {{ . }}
      {{- end }}
  parameters:
    # Inject by the argocd
    roleName: {{ .Release.Namespace }} #should be the role created for the ns with the name of ns
    vaultKubernetesMountPath: {{ .Values.env }} # The simple name of the cluster as is created in Vault path
    vaultAddress: {{ .Values.vaultAddress }} #URL of the vault, https://"{ENV}"-vault.com
    #Never changed, it depends on the implementation of the vault in the cluster
    vaultCACertPath: /vault/tls/cacerts.crt
    # For objects, the objectName and the secretKey should be the same, as is the case
    # in our current secret management.
    objects: |
      {{- range .Values.vaultSecret.objects }}
      - objectName: {{ . }}
        secretPath: {{ $secretPath }}
        secretKey: {{ . }}
      {{- end }}
{{- end }}
{{- end }}
